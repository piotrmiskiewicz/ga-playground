on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Bump image to the last commit hash
        run: |
          "./bump.sh `git rev-parse HEAD`"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - TBD
          draft: false
          prerelease: false
      - name: Install Helm
        run: |
          curl -fsSL -o helm.tar.gz https://get.helm.sh/helm-v3.10.3-linux-amd64.tar.gz
          tar -xzf helm.tar.gz
          mv linux-amd64/helm .
          chmod a+x helm
      - name: Bump chart version
        run: |
          echo "Bumping chart version to: ${{ github.ref_name }}"
          ./bump-chart.sh ${{ github.ref_name }}
      - name: Package chart
        run: |
          helm package ./chart/new-chart
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./new-chart-${{ github.ref_name }}.tgz
          asset_name: new-chart-${{ github.ref_name }}.tgz
          asset_content_type: application/gzip
